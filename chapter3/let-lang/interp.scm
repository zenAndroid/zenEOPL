#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.9 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 66 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
0 0 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 1147 0 25 3 1 #"("
0 0 15 3 6 #"module"
0 0 25 3 1 #" "
0 0 14 3 6 #"interp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"lib"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"eopl.ss\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"eopl\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";; interpreter for the LET language.  The \\commentboxes are the"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 64
#";; latex code for inserting the rules into the code in the book."
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 62
#";; These are too complicated to put here, see the text, sorry."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 19 #"\"drscheme-init.scm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 10 #"\"lang.scm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 21 #"\"data-structures.scm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 19 3 18 #"\"environments.scm\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"provide"
0 0 25 3 1 #" "
0 0 14 3 16 #"value-of-program"
0 0 25 3 1 #" "
0 0 14 3 8 #"value-of"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";;;;;;;;;;;;;;;; the interpreter ;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 39 #";; value-of-program : Program -> ExpVal"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 11 #";; Page: 71"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"value-of-program"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 7 #"program"
0 0 25 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"a-program"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"init-env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 33 #";; value-of : Exp * Env -> ExpVal"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 11 #";; Page: 71"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"value-of"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 5 #"cases"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 52 #";\\commentbox{ (value-of (const-exp \\n{}) \\r) = \\n{}}"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"const-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"num"
0 0 25 3 3 #") ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 14 3 3 #"num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 65
(4
 #";\\commentbox{ (value-of (var-exp \\x{}) \\r) = (apply-env \\r \\x{})"
 #"}"
) 0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 7 #"var-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 3 #") ("
0 0 14 3 9 #"apply-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 23 #";\\commentbox{\\diffspec}"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"diff-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"val1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 4 #"val2"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 4 #"val1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 4 #"num2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 4 #"val2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 7 #"num-val"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #" "
0 0 14 3 4 #"num2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 27 #";\\commentbox{\\zerotestspec}"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"zero?-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"val1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"num1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 4 #"val1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 25 3 1 #" "
0 0 14 3 4 #"num1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 8 #"bool-val"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"              "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 29 #";\\commentbox{\\ma{\\theifspec}}"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 6 #"if-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"val1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->bool"
0 0 25 3 1 #" "
0 0 14 3 4 #"val1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp3"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 35 #";\\commentbox{\\ma{\\theletspecsplit}}"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 9         223 22           0 0           0 36 0 25 3 1 #"("
0 0 14 3 7 #"let-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 8 #")       "
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"val1"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 10 #"extend-env"
0 0 25 3 1 #" "
0 0 14 3 3 #"var"
0 0 25 3 1 #" "
0 0 14 3 4 #"val1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 7 #"let-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 8 #")       "
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 7 #"let-han"
0 0 14 3 1 #"d"
0 0 14 3 3 #"ler"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                 "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"minus-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 17 3 47 #"; Huh, at first I didn't have the num-val there"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 17 3 34 #"; and that caused quite the issues"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 17 3 35 #"; I'll have to remember doing this."
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"addition-exp"
0 0 25 3 2 #" ("
0 0 14 3 9 #"term1-exp"
0 0 25 3 1 #" "
0 0 14 3 9 #"term2-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 9 #"term1-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 9 #"term2-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"mult-exp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 12 #"quotient-exp"
0 0 25 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 31 #"                              ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 7 #"num-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 17 #"num-equality-test"
0 0 25 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                   ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 32 #"                               ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"num-gt-test"
0 0 25 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"num-lt-test"
0 0 25 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 9 #"first-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term1"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 10 #"second-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 5 #"term2"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 24 #"                       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"first-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 9 #"first-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 13 #"second-number"
0 0 25 3 2 #" ("
0 0 14 3 11 #"expval->num"
0 0 25 3 1 #" "
0 0 14 3 10 #"second-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 8 #"bool-val"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 12 #"first-number"
0 0 25 3 1 #" "
0 0 14 3 13 #"second-number"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"cons-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"head-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"head"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 8 #"tail-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"tail"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 8 #"pair-val"
0 0 25 3 1 #" "
0 0 14 3 8 #"head-val"
0 0 25 3 1 #" "
0 0 14 3 8 #"tail-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 7 #"car-exp"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"list-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 8 #"list-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 16 #"expval->pair-car"
0 0 25 3 1 #" "
0 0 14 3 8 #"list-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 7 #"cdr-exp"
0 0 25 3 2 #" ("
0 0 14 3 8 #"list-exp"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"list-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 8 #"list-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 16 #"expval->pair-cdr"
0 0 25 3 1 #" "
0 0 14 3 8 #"list-val"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 15 #"null-list-check"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 3 #"val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ("
0 0 14 3 8 #"bool-val"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 3 #"val"
0 0 25 3 2 #" ("
0 0 14 3 14 #"empty-list-val"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 38 #"                                      "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 14 #"empty-list-exp"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 25 #"                        ("
0 0 14 3 14 #"empty-list-val"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 7 #";; List"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 11 #"list-op-exp"
0 0 25 3 2 #" ("
0 0 14 3 8 #"arg-exps"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 8 #"list-val"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 10 #"expression"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                      ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 10 #"expression"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 36 #"                                    "
0 0 14 3 8 #"arg-exps"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 65
#";; Cond-exp, noot really certain what and how i am going to catch"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 47 #";; all the elements but it should be doable ..."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 53 #";; Going with overly detailed names, because why not."
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 8 #"cond-exp"
0 0 25 3 2 #" ("
0 0 14 3 19 #"expressions-to-eval"
0 0 25 3 1 #" "
0 0 14 3 25 #"corresponding-consequents"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 10 #"cond-value"
0 0 25 3 1 #" "
0 0 14 3 19 #"expressions-to-eval"
0 0 25 3 1 #" "
0 0 14 3 25 #"corresponding-consequents"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 17 3 11 #";; Print op"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"print-exp"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"to-print"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"expr"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 14 3 8 #"to-print"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 7 #"num-val"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"        )))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 17 3 36 #";; I have no clue what i'm doing atm"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"cond-value"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 1 #" "
0 0 14 3 7 #"conseqs"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #") "
0 0 17 3 66
#"; rip this solution is too hacky i dont think its the one intended"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 47 #"; I will make the assumption that the two lists"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 65
#"; have the same length, TODO: Is this something you want to keep?"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 10 #"eopl:error"
0 0 25 3 1 #" "
0 0 19 3 23 #"\"Cond expression empty\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 13 #"head-cond-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 19 #"head-consequent-exp"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 7 #"conseqs"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"head-val"
0 0 25 3 2 #" ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 13 #"head-cond-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 12 #"expval->bool"
0 0 25 3 1 #" "
0 0 14 3 8 #"head-val"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 19 #"head-consequent-exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 10 #"cond-value"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"conds"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 7 #"conseqs"
0 0 25 3 2 #") "
0 0 14 3 3 #"env"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"let-handler"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"exps"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"vals"
0 0 25 3 2 #" ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 1 #"("
0 0 14 3 3 #"exp"
0 0 25 3 3 #") ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 3 #"exp"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 14 3 4 #"exps"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 8 #"value-of"
0 0 25 3 1 #" "
0 0 14 3 4 #"body"
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ("
0 0 14 3 6 #"extend"
0 0 14 3 1 #"-"
0 0 14 3 4 #"env*"
0 0 25 3 1 #" "
0 0 14 3 4 #"vars"
0 0 25 3 1 #" "
0 0 14 3 4 #"vals"
0 0 25 3 1 #" "
0 0 14 3 3 #"env"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
